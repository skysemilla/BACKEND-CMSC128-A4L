{"version":3,"sources":["webpack:///webpack/bootstrap 15822fc4cc585c611085","webpack:///external \"express\"","webpack:///./src/database/index.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./src/index.js","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"express-session\"","webpack:///external \"express-mysql-session\"","webpack:///external \"mysql\"","webpack:///./src/router.js","webpack:///./src/entities/auth/router.js","webpack:///external \"regenerator-runtime\"","webpack:///./src/entities/auth/controller.js","webpack:///./src/entities/extensions/router.js","webpack:///./src/entities/extensions/controller.js","webpack:///./src/entities/publications/router.js","webpack:///./src/entities/publications/controller.js","webpack:///./src/entities/signup/router.js","webpack:///./src/entities/signup/controller.js","webpack:///./src/hash.js","webpack:///external \"js-sha256\"","webpack:///./src/entities/studyload/router.js","webpack:///./src/entities/studyload/controller.js","webpack:///./src/entities/teachload/router.js","webpack:///./src/entities/teachload/controller.js","webpack:///./src/entities/facultylist/router.js","webpack:///./src/entities/facultylist/controller.js","webpack:///./src/entities/adminWork/router.js","webpack:///./src/entities/adminWork/controller.js","webpack:///./src/entities/consulHours/router.js","webpack:///./src/entities/consulHours/controller.js","webpack:///./src/entities/facultygrant/router.js","webpack:///./src/entities/facultygrant/controller.js","webpack:///./src/entities/limitedpractice/router.js","webpack:///./src/entities/limitedpractice/controller.js"],"names":["db","mysql","createConnection","host","user","password","dateStrings","connect","err","console","log","message","query","app","express","MySQLStore","store","sessionStore","use","bodyParser","json","urlencoded","encoded","logger","session","key","secret","resave","saveUninitialized","createDatabaseTable","checkExpirationInterval","expiration","port","process","env","PORT","server","listen","router","Router","post","req","res","body","status","data","login","username","Promise","resolve","reject","queryString","values","rows","length","get","services","service","category","title","no_of_hours","no_of_participants","role","credits","id","serviceAdded","service_id","serviceEdited","getService","getServices","addService","emp_id","results","insertId","removeService","affectedRows","editService","publication","publications","credit_units","funding","start_date","end_date","publication_id","row","getPublication","getPublications","addPublication","addCoworker","coworker_id","checkIfExisting","removePublication","editPublication","type","f_name","m_name","l_name","department","is_full_time","college","semester","year","addEmployee","hpassword","sha256","getEmployee","require","degree","university","subject_id","studyload_id","sample","book","subject_code","section_code","isLecture","units","room","start_time","end_time","subjects","addStudyLoad","removeStudyLoad","editStudyLoad","getStudyLoad","getStudyEmp","getAllStudyLoad","noOfStudents","teachingload_id","params","addTeachLoad","removeTeachLoad","editTeachLoad","getTeachLoad","getTeachEmp","getAllTeachLoad","faculty","getFaculty","getAllFaculty","office","consultation","put","positionEdited","addPosition","getPosition","getPositions","removePosition","editPosition","position_id","consultation_start_time","consultation_end_time","consultation_place","day","addConsulHours","removeConsulHours","getConsulHours","editConsulHours","facultygrant","is_approved","professional_chair","grants","grant_title","faculty_grant_id","addFacultyGrant","isapproved","emp_date","getAllFacultyGrant","getFacultyGrant","removeFacultyGrant","editFacultyGrant","haveApplied","date_submitted","limited_practice_id","addLimitedPractice","removeLimitedPractice","editLimitedPractice","getLimitedPractice","getAllLimitedPractice"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 15822fc4cc585c611085","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","import mysql from 'mysql';\n\nconst db = mysql.createConnection({\n  host: 'localhost',\n  user: 'skydev',\n  password: 'skydev',\n  db: 'skydev',\n  dateStrings: true\n});\n\ndb.connect(err => {\n  if (err) {\n    console.log('Error in connecting to database');\n    console.log(err.message);\n  } else {\n    console.log('Success in connecting to database');\n  }\n});\n\ndb.query('USE skydev');\n\nexport default db;\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/index.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 2\n// module chunks = 0","import express from 'express';\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport session from 'express-session';\nimport store from 'express-mysql-session';\nimport db from './database';\nimport router from './router';\n\nconst app = express();\nconst MySQLStore = store(session);\nconst sessionStore = new MySQLStore({}, db);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ encoded: true }));\napp.use(logger('dev'));\n\napp.use(\n  session({\n    key: 'skydev',\n    secret: 'skydev',\n    resave: true,\n    saveUninitialized: true,\n    store: sessionStore,\n    createDatabaseTable: true,\n    checkExpirationInterval: 900000,\n    expiration: 86400000\n  })\n);\n\napp.use(router);\n\nconst port = process.env.PORT || 3001;\n\nconst server = app.listen(port, () => {\n  console.log(`Server is running at port: ${port}`);\n});\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"express-mysql-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-mysql-session\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"mysql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mysql\"\n// module id = 9\n// module chunks = 0","import { Router } from 'express';\n\n// put import routers here\nimport authRouter from './entities/auth/router';\nimport extensionRouter from './entities/extensions/router';\nimport publicationsRouter from './entities/publications/router';\nimport signupRouter from './entities/signup/router';\nimport studyRouter from './entities/studyload/router';\nimport teachRouter from './entities/teachload/router';\nimport facultyRouter from './entities/facultylist/router';\n//import fsrRouter from './entities/fsrlist/router';\nimport adminWorkRouter from './entities/adminWork/router';\nimport consulHourRouter from './entities/consulHours/router';\nimport facultygrantRouter from './entities/facultygrant/router';\nimport limitedpracticeRouter from './entities/limitedpractice/router';\n\nconst router = Router();\n\n// put use statements here\nrouter.use('/', authRouter);\nrouter.use(extensionRouter);\nrouter.use(publicationsRouter);\nrouter.use(signupRouter);\nrouter.use(studyRouter);\nrouter.use(teachRouter);\nrouter.use(facultyRouter);\n//router.use(fsrRouter);\nrouter.use(adminWorkRouter);\nrouter.use(consulHourRouter);\nrouter.use(facultygrantRouter);\nrouter.use(limitedpracticeRouter);\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/login', async (req, res) => {\n  try {\n    const user = await Ctrl.login(req.body);\n    req.session.user = user;\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully logged in',\n      data: user\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 500:\n        message = 'Internal server error while logging in';\n        break;\n      case 404:\n        message = 'Wrong credentials';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/logout', (req, res) => {\n  req.session.user = null;\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully logged out'\n  });\n});\n\nrouter.post('/api/session', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully fetched current session',\n    data: req.session.user ? req.session.user : null\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/router.js","module.exports = require(\"regenerator-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime\"\n// module id = 12\n// module chunks = 0","import db from '../../database';\n\nexport const login = ({ username, password }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT \n        *\n      FROM\n        EMPLOYEE\n      WHERE\n        username = BINARY ? and\n        password = BINARY ?\n    `;\n\n    const values = [username, password];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets services\nrouter.get('/api/service/viewAll', async (req, res) => {\n  try {\n    const services = await Ctrl.getServices();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all services',\n      data: services\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// get a service\nrouter.post('/api/service/view', async (req, res) => {\n  try {\n    const service = await Ctrl.getService(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched service',\n      data: service\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a service\nrouter.post('/api/service/add', async (req, res) => {\n  if (\n    req.body.category &&\n    req.body.title &&\n    req.body.no_of_hours >= 0 &&\n    req.body.no_of_participants >= 0 &&\n    req.body.role &&\n    req.body.credits >= 0\n  ) {\n    try {\n      const id = await Ctrl.addService(req.body);\n      // const serviceAdded = await Ctrl.getService({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created sample',\n        data: serviceAdded\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a service\nrouter.post('/api/service/delete', async (req, res) => {\n  try {\n    const service = await Ctrl.getService(req.body);\n    await Ctrl.removeService(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed sample',\n      data: service\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Cannot Delete: Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a service\nrouter.post('/api/service/edit', async (req, res) => {\n  try {\n    await Ctrl.editService(req.body);\n    const serviceEdited = await Ctrl.getService({ id: req.body.service_id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited service',\n      data: serviceEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extensions/router.js","import db from '../../database';\n\n// gets a service\nexport const getService = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_service_by_ID(?) \n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all services\nexport const getServices = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      view_service()\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a service\nexport const addService = ({\n  category,\n  title,\n  no_of_hours,\n  no_of_participants,\n  role,\n  credits,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_service(?, ?, ?, ?, ?, ?, ?)\n        `;\n\n    const values = [\n      category,\n      title,\n      no_of_hours,\n      no_of_participants,\n      role,\n      credits,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a service\nexport const removeService = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_service(?)\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a sample\nexport const editService = ({\n  service_id,\n  category,\n  title,\n  no_of_hours,\n  no_of_participants,\n  role,\n  credits\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_service(?, ?, ?, ?, ?, ?, ?)\n    `;\n\n    const values = [\n      service_id, \n      category,\n      title,\n      no_of_hours,\n      no_of_participants,\n      role,\n      credits\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extensions/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets a publication by id\nrouter.post('/api/publication/view', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewAll', async (req, res) => {\n  try {\n    const publications = await Ctrl.getPublications();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all publications',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// add a publication\nrouter.post('/api/publication/add', async (req, res) => {\n  if (\n    req.body.credit_units >= 0 &&\n    req.body.category &&\n    req.body.funding &&\n    req.body.title &&\n    req.body.role &&\n    req.body.start_date &&\n    req.body.end_date\n  ) {\n    try {\n      const id = await Ctrl.addPublication(req.body);\n      // const publication = await Ctrl.getPublication({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created publication',\n        // data: publication\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// add a coworker\nrouter.post('/api/publication/add', async (req, res) => {\n  if (req.body.publication_id) {\n    try {\n      await Ctrl.addCoworker(req.body);\n      const row = Ctrl.checkIfExisting(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added coworker',\n        data: row\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/delete', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.body);\n    await Ctrl.removePublication(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a publication\nrouter.post('/api/publication/edit', async (req, res) => {\n  try {\n    await Ctrl.editPublication(req.body);\n    const publication = await Ctrl.getPublication({\n      id: req.body.publication_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/router.js","import db from '../../database';\n\n// gets a publication by id\nexport const getPublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_publication_by_ID(?);\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all publications\nexport const getPublications = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL view_publication();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a publication\nexport const addPublication = ({ credit_units, category, funding, title, role, start_date, end_date, emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_publication(?, ?, ?, ?, ?, ?, ?, ?);\n        `;\n\n    const values = [\n      credit_units,\n      category,\n      funding,\n      title,\n      role,\n      start_date,\n      end_date,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// adds a coworker\nexport const addCoworker = ({ coworker_id, publication_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_coworker(?, ?);\n        `;\n\n    const values = [coworker_id, publication_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// checks if publication_id and coworker_id exists\nexport const checkIfExisting = ({ coworker_id, publication_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL view_publication_coworkers(?, ?);\n        `;\n\n    const values = [coworker_id, publication_id];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes a publication\nexport const removePublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_publication(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a publication\nexport const editPublication = ({\n  publication_id,\n  credit_units,\n  category,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_publication(?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      publication_id,\n      credit_units,\n      category,\n      funding,\n      title,\n      role,\n      start_date,\n      end_date\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/signup', async (req, res) => {\n  if (\n    req.body.emp_id &&\n    req.body.username &&\n    req.body.password &&\n    req.body.type &&\n    req.body.f_name &&\n    req.body.m_name &&\n    req.body.l_name &&\n    req.body.department &&\n    req.body.is_full_time &&\n    req.body.college &&\n    req.body.semester &&\n    req.body.year\n  ) {\n    try {\n      const id = await Ctrl.addEmployee(req.body);\n      // const employee = await Ctrl.getEmployee({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created employee'\n        // data: employee\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/router.js","import db from '../../database';\nimport sha256 from '../../hash';\n\n//adds an employee\nexport const addEmployee = ({\n  emp_id,\n  username,\n  password,\n  type,\n  f_name,\n  m_name,\n  l_name,\n  department,\n  is_full_time,\n  college,\n  semester,\n  year\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL insert_employee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const hpassword = sha256(password);\n\n    const values = [\n      emp_id,\n      username,\n      hpassword,\n      type,\n      f_name,\n      m_name,\n      l_name,\n      department,\n      is_full_time,\n      college,\n      semester,\n      year\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      // console.log(results);\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// gets an employee\nexport const getEmployee = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id_increment = ?;\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/controller.js","var sha256 = require('js-sha256').sha256;\n\nexport default sha256;\n\n\n// WEBPACK FOOTER //\n// ./src/hash.js","module.exports = require(\"js-sha256\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"js-sha256\"\n// module id = 21\n// module chunks = 0","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/studyload/add', async (req, res) => {\n  if (\n    req.body.degree &&\n    req.body.university &&\n    req.body.credits &&\n    req.body.emp_id &&\n    req.body.subject_id\n  ) {\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addStudyLoad(req.body);\n      const sample = await Ctrl.getStudyLoad({ studyload_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created study load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/delete', async (req, res) => {\n  if (\n    req.body.studyload_id\n  ) {\n    try {\n      const book = await Ctrl.getStudyLoad(req.body);\n      await Ctrl.removeStudyLoad(req.body);\n  \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed study load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/edit', async (req, res) => {\n  if (\n    req.body.studyload_id &&\n    req.body.degree &&\n    req.body.university &&\n    req.body.credits &&\n    req.body.subject_code &&\n    req.body.section_code &&\n    req.body.isLecture &&\n    req.body.units &&\n    req.body.room &&\n    req.body.start_time &&\n    req.body.end_time\n) {\n    try {\n      await Ctrl.editStudyLoad(req.body);\n      const sample = await Ctrl.getStudyLoad({\n        studyload_id: req.body.studyload_id\n      });\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyEmp(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Study load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/studyload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllStudyLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all studyload',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/router.js","import db from '../../database';\n\nexport const addStudyLoad = ({\n  degree,\n  university,\n  credits,\n  emp_id,\n  subject_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call insert_studyload(?,?,?,?,?)\n    `;\n\n    const values = [\n      subject_id,\n      degree,\n      university,\n      credits,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call delete_studyload(?)\n    `;\n\n    db.query(queryString, studyload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editStudyLoad = ({\n  studyload_id,\n  degree,\n  university,\n  credits,\n  subject_code,\n  section_code,\n  isLecture,\n  units,\n  room,\n  start_time,\n  end_time\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call update_studyload(?,?,?,?,?,?,?,?,?,?,?)\n    `;\n\n    const values = [\n      studyload_id,\n      degree,\n      university,\n      credits,\n      subject_code,\n      section_code,\n      isLecture,\n      units,\n      room,\n      start_time,\n      end_time\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call view_by_studyload_id(?)\n        `;\n\n    db.query(queryString, studyload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getStudyEmp = ( json ) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n        call view_employee_studyload(?)\n        `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getAllStudyLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call view_studyload()\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/teachload/add', async (req, res) => {\n  if (req.body.emp_id && req.body.noOfStudents && req.body.subject_code) {\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addTeachLoad(req.body);\n      const sample = await Ctrl.getTeachLoad({ teachingload_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created teaching load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/delete/', async (req, res) => {\n  if (\n    req.body.teachingload_id\n  ) {\n    try {\n      const book = await Ctrl.getTeachLoad(req.body);\n      await Ctrl.removeTeachLoad(req.body);\n    \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed teach load',\n        data: book\n      });\n      } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/edit/', async (req, res) => {\n  if (\n    req.body.teachingload_id &&\n    req.body.emp_id &&\n    req.body.noOfStudents &&\n    req.body.subject_code\n  ) {\n    try {\n      await Ctrl.editTeachLoad(req.body);\n      const sample = await Ctrl.getTeachLoad({\n        teachingload_id: req.body.teachingload_id\n      });\n    \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n      } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.get('/api/teachload/view/:teachingload_id', async (req, res) => {\n  try {\n    const book = await Ctrl.getTeachLoad(req.params);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched teach load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Teach load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/teachload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllTeachLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all teaching load',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/router.js","import db from '../../database';\n\nexport const addTeachLoad = ({ emp_id, noOfStudents, subject_code }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      INSERT INTO\n      TEACHINGLOAD\n      (emp_id, noOfStudents, subject_code)\n      VALUES\n      (?, ?, ?)\n    `;\n\n    const values = [emp_id, noOfStudents, subject_code];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        DELETE \n          FROM TEACHINGLOAD\n        WHERE \n          teachingload_id = ?\n      `;\n\n    db.query(queryString, teachingload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editTeachLoad = ({\n  teachingload_id,\n  emp_id,\n  noOfStudents,\n  subject_code\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        UPDATE TEACHINGLOAD\n        SET\n          noOfStudents = ?,\n          emp_id = ?,\n          subject_code = ?\n        WHERE\n          teachingload_id = ?\n      `;\n\n    const values = [noOfStudents, emp_id, subject_code,teachingload_id];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            TEACHINGLOAD\n          WHERE\n          teachingload_id = ?\n        `;\n\n    db.query(queryString, teachingload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getTeachEmp = ({ emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            TEACHINGLOAD\n          WHERE\n            emp_id = ?\n        `;\n\n    db.query(queryString, emp_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getAllTeachLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT *\n          FROM TEACHINGLOAD\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets one faculty\nrouter.post('/api/faculty/view', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getFaculty(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets all faculty\nrouter.get('/api/faculty/viewAll', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getAllFaculty();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/router.js","import db from '../../database';\n\n// gets one faculty\nexport const getFaculty = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          call view_employee_by_id(?);\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all faculty\nexport const getAllFaculty = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call view_employee();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/position/add', async (req, res) => {\n  if (\n    req.body.office &&\n    req.body.credit_units &&\n    req.body.emp_id\n  ) {\n    try {  \n      const id = await Ctrl.addPosition(req.body);\n      // const sample = await Ctrl.getPosition({ id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added position',\n        // data: sample\n\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\nrouter.post('/api/position/remove', async (req, res) => {\n  try {\n    const consultation = await Ctrl.getPosition(req.body);\n    await Ctrl.removePosition(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed position',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//edit a position\nrouter.put('/api/position/edit', async (req, res) => {\n  try {\n    await Ctrl.editPosition(req.body);\n    const positionEdited = await Ctrl.getPosition({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited service',\n      data: positionEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/router.js","import db from '../../database';\n\n// add position\nexport const addPosition = ({office, credit_units, emp_id}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL insert_position(?, ?, ?);\n    `;\n\n    const values = [office, credit_units, emp_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// get position\nexport const getPosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            POSITIONN\n          WHERE\n            position_id = ?;\n        `;\n\n    db.query(queryString, [id, id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// get all positions\nexport const getPositions = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_position();\n        `;\n\n    db.query(queryString, [id, id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes position\nexport const removePosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      \n      CALL delete_position(?);\n     \n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a position\nexport const editPosition = ({\n  position_id, office, credit_units, emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_position(?, ?, ?, ?);\n    `;\n\n    const values = [\n      office, credit_units, emp_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/consulHours/add', async (req, res) => {\n  if (\n    req.body.consultation_start_time &&\n    req.body.consultation_end_time &&\n    req.body.consultation_place &&\n    req.body.emp_id &&\n    req.body.day\n  ) {\n    try {     \n      const id = await Ctrl.addConsulHours(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added consultation hours',\n\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\n\n\nrouter.post('/api/consulHours/delete', async (req, res) => {\n  try {\n    const consultation = await Ctrl.getConsulHours(req.body);\n    await Ctrl.removeConsulHours(req.body);\n  \n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed consulation hours',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation hours not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/router.js","import db from '../../database';\n\n\nexport const addConsulHours = ({consultation_start_time, consultation_end_time, consultation_place, day, emp_id}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL \n      insert_consultation(?, ?, ?, ?, ?);\n    `;\n\n    const values = [consultation_start_time, consultation_end_time, consultation_place, day, emp_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes consultation hours\nexport const removeConsulHours = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    CALL \n    delete_consultation(?)\n     \n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n//gets all consultation hours\nexport const getConsulHours = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      view_consultation()\n        `;\n\n    db.query(queryString, [id, id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\nexport const editConsulHours = ({consultation_start_time, consultation_end_time, consultation_place, day, emp_id}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n     \n    `;\n\n    const values = [\n      consultation_start_time, consultation_end_time, consultation_place, day, emp_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets a faculty grant by id\nrouter.post('/api/facultygrant/view', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\n// add a faculty grant\nrouter.post('/api/facultygrant/add', async (req, res) => {\n  if (\n    req.body.type &&\n    req.body.is_approved &&\n    req.body.professional_chair &&\n    req.body.grants &&\n    req.body.grant_title &&\n    req.body.start_date &&\n    req.body.end_date &&\n    req.body.emp_id \n  ) {\n    try {\n      const id = await Ctrl.addFacultyGrant(req.body);\n      const facultygrant = await Ctrl.getFacultyGrant({faculty_grant_id: id});\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created faculty grant',\n        data: facultygrant\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\n// removes a faculty grant\nrouter.post('/api/facultygrant/delete', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    await Ctrl.removeFacultyGrant(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a facultygrant\nrouter.post('/api/facultygrant/edit', async (req, res) => {\n  try {\n    await Ctrl.editFacultyGrant(req.body);\n    const facultygrant = await Ctrl.getFacultyGrant({\n      id: req.body.faculty_grant_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/router.js","import db from '../../database';\n\n//adds a faculty grant\n  export const addFacultyGrant = ({type, isapproved, professional_chair, grants, grant_title, start_date, emp_date, emp_id}) => {\n    return new Promise((resolve, reject) => {\n      const queryString = `\n        CALL \n        insert_faculty_grant(?, ?, ?, ?, ?, ?, ?, ?);\n      `;\n  \n      const values = [type, isapproved, professional_chair, grants, grant_title, start_date, emp_date, emp_id];\n  \n      db.query(queryString, values, (err, results) => {\n        if (err) {\n          console.log(err.message);\n          return reject(500);\n        }\n  \n        return resolve(results.insertId);\n      });\n    });\n  };\n  \n// gets all faculty\n  export const getAllFacultyGrant = () => {\n    return new Promise((resolve, reject) => {\n      const queryString = `\n        call view_faculty_grant();\n      `;\n  \n      db.query(queryString, (err, rows) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n  \n        if (!rows.length) {\n          return reject(404);\n        }\n  \n        return resolve(rows);\n      });\n    });\n  };\n  \n// gets a faculty grant by id\nexport const getFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            FACULTYGRANT\n          WHERE\n            faculty_grant_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes a faculty grant\nexport const removeFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      delete_faculty_grant();\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a faculty grant\nexport const editFacultyGrant = ({\n  faculty_grant_id,\n\ttype,\n\tis_approved,\n\tprofessional_chair,\n\tgrants,\n\tgrant_title,\n\tstart_date,\n\tend_date,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL \n      update_faculty_grant(?, ?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [type, isapproved, professional_chair, grants, grant_title, start_date, emp_date, emp_id];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/limitedpractice/add', async (req, res) => {\n  if (\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      const id = await Ctrl.addLimitedPractice(req.body);\n      const sample = await Ctrl.getLimitedPractice({ limited_practice_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created limited practice',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\nrouter.post('/api/limitedpractice/delete', async (req, res) => {\n  if (\n    req.body.limited_practice_id\n  ) {\n    try {\n      const book = await Ctrl.getLimitedPractice(req.body);\n      await Ctrl.removeLimitedPractice(req.body);\n  \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed limited practice',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\nrouter.post('/api/limitedpractice/edit', async (req, res) => {\n  if (\n    req.body.limited_practice_id &&\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      await Ctrl.editLimitedPractice(req.body);\n      const sample = await Ctrl.getLimitedPractice({\n        limited_practice_id: req.body.limited_practice_id\n      });\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited limited practice',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/limitedpractice/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getLimitedPractice(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched limited practice',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Limited practice not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/limitedpractice/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllLimitedPractice();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all limited practice',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/router.js","import db from '../../database';\n\nexport const addLimitedPractice = ({\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    CALL  \n    insert_limited_practice(?, ?, ?)\n    `;\n    \n    const values = [\n      haveApplied,\n      date_submitted,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n\nexport const removeLimitedPractice = ({ limited_practice_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        delete_limited_practice(?);\n      `;\n\n    db.query(queryString, limited_practice_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\nexport const editLimitedPractice = ({\n  limited_practice_id,\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        update_limited_practice(?, ?, ?, ?)\n      `;\n\n    const values = [\n      haveApplied,\n      date_submitted,\n      emp_id,\n      limited_practice_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getLimitedPractice = ({ limited_practice_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL\n          view_limited_practice_by_emp_id(?)\n        `;\n\n    db.query(queryString, limited_practice_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllLimitedPractice = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        view_limited_practice()\n      `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/controller.js"],"sourceRoot":""}