{"version":3,"sources":["webpack:///webpack/bootstrap dfc07af62ea5599dccd3","webpack:///external \"express\"","webpack:///./src/database/index.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./src/hash.js","webpack:///./src/index.js","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"express-session\"","webpack:///external \"express-mysql-session\"","webpack:///external \"mysql\"","webpack:///./src/router.js","webpack:///./src/entities/auth/router.js","webpack:///external \"regenerator-runtime\"","webpack:///./src/entities/auth/controller.js","webpack:///external \"js-sha256\"","webpack:///./src/entities/extensions/router.js","webpack:///./src/entities/extensions/controller.js","webpack:///./src/entities/publications/router.js","webpack:///./src/entities/publications/controller.js","webpack:///./src/entities/signup/router.js","webpack:///./src/entities/signup/controller.js","webpack:///./src/entities/studyload/router.js","webpack:///./src/entities/studyload/controller.js","webpack:///./src/entities/teachload/router.js","webpack:///./src/entities/teachload/controller.js","webpack:///./src/entities/facultylist/router.js","webpack:///./src/entities/facultylist/controller.js","webpack:///./src/entities/adminWork/router.js","webpack:///./src/entities/adminWork/controller.js","webpack:///./src/entities/consulHours/router.js","webpack:///./src/entities/consulHours/controller.js","webpack:///./src/entities/facultygrant/router.js","webpack:///./src/entities/facultygrant/controller.js","webpack:///./src/entities/limitedpractice/router.js","webpack:///./src/entities/limitedpractice/controller.js"],"names":["db","mysql","createConnection","host","user","password","dateStrings","connect","err","console","log","message","query","sha256","require","app","express","MySQLStore","store","sessionStore","use","bodyParser","json","urlencoded","encoded","logger","session","key","secret","resave","saveUninitialized","createDatabaseTable","checkExpirationInterval","expiration","port","process","env","PORT","server","listen","router","Router","post","req","res","body","status","data","login","username","Promise","resolve","reject","queryString","hpassword","values","rows","length","get","services","activity","category","title","no_of_hours","no_of_participants","role","credits","id","serviceAdded","service","activity_id","serviceEdited","getActivity","getActivities","addActivity","start_date","end_date","funding_agency","emp_id","results","insertId","removeActivity","affectedRows","editActivity","publication","publications","credit_units","funding","publication_id","row","getPublication","getPublications","addPublication","addCoworker","coworker_id","checkIfExisting","removePublication","editPublication","type","f_name","m_name","l_name","department","college","emp_type","is_full_time","email","addEmployee","getEmployee","subject_id","studyload_id","sample","book","degree","university","subject_code","section_code","isLecture","units","room","start_time","end_time","subjects","addStudyLoad","removeStudyLoad","editStudyLoad","getStudyLoad","getStudyEmp","getAllStudyLoad","no_of_students","days","hours","creditw","teachingload_id","addTeachLoad","removeTeachLoad","editTeachLoad","getTeachLoad","getTeachEmp","getAllTeachLoad","faculty","getFaculty","getAllFaculty","office","consultation","put","positionEdited","addPosition","getPosition","getAllPositions","removePosition","editPosition","position_id","consultation_start_time","consultation_end_time","consultation_place","day","addConsulHours","removeConsulHours","getConsultation","getAllConsulHours","editConsulHours","facultygrant","is_approved","professional_chair","grants","grant_title","faculty_grant_id","addFacultyGrant","isapproved","emp_date","getAllFacultyGrant","getFacultyGrant","removeFacultyGrant","editFacultyGrant","haveApplied","date_submitted","limited_practice_id","addLimitedPractice","removeLimitedPractice","editLimitedPractice","getLimitedPractice","getAllLimitedPractice"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dfc07af62ea5599dccd3","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","import mysql from 'mysql';\n\nconst db = mysql.createConnection({\n  host: 'localhost',\n  user: 'skydev',\n  password: 'skydev',\n  db: 'skydev',\n  dateStrings: true\n});\n\ndb.connect(err => {\n  if (err) {\n    console.log('Error in connecting to database');\n    console.log(err.message);\n  } else {\n    console.log('Success in connecting to database');\n  }\n});\n\ndb.query('USE skydev');\n\nexport default db;\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/index.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 2\n// module chunks = 0","var sha256 = require('js-sha256').sha256;\n\nexport default sha256;\n\n\n\n// WEBPACK FOOTER //\n// ./src/hash.js","import express from 'express';\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport session from 'express-session';\nimport store from 'express-mysql-session';\nimport db from './database';\nimport router from './router';\n\nconst app = express();\nconst MySQLStore = store(session);\nconst sessionStore = new MySQLStore({}, db);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ encoded: true }));\napp.use(logger('dev'));\n\napp.use(\n  session({\n    key: 'skydev',\n    secret: 'skydev',\n    resave: true,\n    saveUninitialized: true,\n    store: sessionStore,\n    createDatabaseTable: true,\n    checkExpirationInterval: 900000,\n    expiration: 86400000\n  })\n);\n\napp.use(router);\n\nconst port = process.env.PORT || 3001;\n\nconst server = app.listen(port, () => {\n  console.log(`Server is running at port: ${port}`);\n});\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"express-mysql-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-mysql-session\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"mysql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mysql\"\n// module id = 10\n// module chunks = 0","import { Router } from 'express';\n\n// put import routers here\nimport authRouter from './entities/auth/router';\nimport extensionRouter from './entities/extensions/router';\nimport publicationsRouter from './entities/publications/router';\nimport signupRouter from './entities/signup/router';\nimport studyRouter from './entities/studyload/router';\nimport teachRouter from './entities/teachload/router';\nimport facultyRouter from './entities/facultylist/router';\n//import fsrRouter from './entities/fsrlist/router';\nimport adminWorkRouter from './entities/adminWork/router';\nimport consulHourRouter from './entities/consulHours/router';\nimport facultygrantRouter from './entities/facultygrant/router';\nimport limitedpracticeRouter from './entities/limitedpractice/router';\n\nconst router = Router();\n\n// put use statements here\nrouter.use('/', authRouter);\nrouter.use(extensionRouter);\nrouter.use(publicationsRouter);\nrouter.use(signupRouter);\nrouter.use(studyRouter);\nrouter.use(teachRouter);\nrouter.use(facultyRouter);\n//router.use(fsrRouter);\nrouter.use(adminWorkRouter);\nrouter.use(consulHourRouter);\nrouter.use(facultygrantRouter);\nrouter.use(limitedpracticeRouter);\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/login', async (req, res) => {\n  try {\n    const user = await Ctrl.login(req.body);\n    req.session.user = user;\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully logged in',\n      data: user\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 500:\n        message = 'Internal server error while logging in';\n        break;\n      case 404:\n        message = 'Wrong credentials';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/logout', (req, res) => {\n  req.session.user = null;\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully logged out'\n  });\n});\n\nrouter.post('/api/session', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully fetched current session',\n    data: req.session.user ? req.session.user : null\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/router.js","module.exports = require(\"regenerator-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime\"\n// module id = 13\n// module chunks = 0","import db from '../../database';\nimport sha256 from '../../hash';\n\nexport const login = ({ username, password }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT \n        *\n      FROM\n        EMPLOYEE\n      WHERE\n        username = BINARY ? and\n        password = BINARY ?\n    `;\n\n    const hpassword = sha256(password);\n    const values = [username, hpassword];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/controller.js","module.exports = require(\"js-sha256\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"js-sha256\"\n// module id = 15\n// module chunks = 0","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets services\nrouter.get('/api/activity/viewAll', async (req, res) => {\n  try {\n    const services = await Ctrl.getActivities();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all Activities',\n      data: services\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// get a service\nrouter.post('/api/service/view', async (req, res) => {\n  try {\n    const activity = await Ctrl.getActivity(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched service',\n      data: activity\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a service\nrouter.post('/api/activity/add', async (req, res) => {\n  if (\n    req.body.category &&\n    req.body.title &&\n    req.body.no_of_hours >= 0 &&\n    req.body.no_of_participants >= 0 &&\n    req.body.role &&\n    req.body.credits >= 0\n  ) {\n    try {\n      const id = await Ctrl.addActivity(req.body);\n      const serviceAdded = await Ctrl.getActivity({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created sample',\n        data: serviceAdded\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a service\nrouter.post('/api/activity/delete', async (req, res) => {\n  try {\n    const service = await Ctrl.getActivity(req.body);\n    await Ctrl.removeActivity(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed sample',\n      data: service\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Cannot Delete: Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a Activity\nrouter.post('/api/activity/edit', async (req, res) => {\n  try {\n    await Ctrl.editActivity(req.body);\n    const serviceEdited = await Ctrl.getActivity({ id: req.body.activity_id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited service',\n      data: serviceEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extensions/router.js","import db from '../../database';\n\n// gets a service\nexport const getActivity = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT * from ACTIVITY where activity_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all Activity\nexport const getActivities = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      view_Activity()\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a Activity\nexport const addActivity = ({\n  credits,\n  title,\n  category,\n  no_of_hours,\n  no_of_participants,\n  role,\n  start_date,\n  end_date,\n  funding_agency,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_activity(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `;\n\n    const values = [\n      credits,\n      title,\n      category,\n      no_of_hours,\n      no_of_participants,\n      role,\n      start_date,\n      end_date,\n      funding_agency,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a Activity\nexport const removeActivity = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_activity(?)\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a Activity\nexport const editActivity = ({\n  activity_id,\n  credits,\n  title,\n  category,\n  no_of_hours,\n  no_of_participants,\n  role,\n  start_date,\n  end_date,\n  funding_agency,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_activity(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `;\n\n    const values = [\n      activity_id,\n      credits,\n      title,\n      category,\n      no_of_hours,\n      no_of_participants,\n      role,\n      start_date,\n      end_date,\n      funding_agency,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extensions/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets a publication by id\nrouter.post('/api/publication/view', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewAll', async (req, res) => {\n  try {\n    const publications = await Ctrl.getPublications();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all publications',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// add a publication\nrouter.post('/api/publication/add', async (req, res) => {\n  if (\n    req.body.credit_units >= 0 &&\n    req.body.category &&\n    req.body.funding &&\n    req.body.title &&\n    req.body.role &&\n    req.body.start_date &&\n    req.body.end_date\n  ) {\n    try {\n      const id = await Ctrl.addPublication(req.body);\n      // const publication = await Ctrl.getPublication({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created publication',\n        // data: publication\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// add a coworker\nrouter.post('/api/publication/add', async (req, res) => {\n  if (req.body.publication_id) {\n    try {\n      await Ctrl.addCoworker(req.body);\n      const row = Ctrl.checkIfExisting(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added coworker',\n        data: row\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/delete', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.body);\n    await Ctrl.removePublication(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a publication\nrouter.post('/api/publication/edit', async (req, res) => {\n  try {\n    await Ctrl.editPublication(req.body);\n    const publication = await Ctrl.getPublication({\n      id: req.body.publication_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/router.js","import db from '../../database';\n\n// gets a publication by id\nexport const getPublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_publication_by_ID(?);\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all publications\nexport const getPublications = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL view_publication();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a publication\nexport const addPublication = ({ credit_units, category, funding, title, role, start_date, end_date, emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_publication(?, ?, ?, ?, ?, ?, ?, ?);\n        `;\n\n    const values = [\n      credit_units,\n      category,\n      funding,\n      title,\n      role,\n      start_date,\n      end_date,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// adds a coworker\nexport const addCoworker = ({ coworker_id, publication_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_coworker(?, ?);\n        `;\n\n    const values = [coworker_id, publication_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// checks if publication_id and coworker_id exists\nexport const checkIfExisting = ({ coworker_id, publication_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL view_publication_coworkers(?, ?);\n        `;\n\n    const values = [coworker_id, publication_id];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes a publication\nexport const removePublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_publication(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a publication\nexport const editPublication = ({\n  publication_id,\n  credit_units,\n  category,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_publication(?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      publication_id,\n      credit_units,\n      category,\n      funding,\n      title,\n      role,\n      start_date,\n      end_date\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/signup', async (req, res) => {\n  if (\n    req.body.emp_id &&\n    req.body.username &&\n    req.body.password &&\n    req.body.type &&\n    req.body.f_name &&\n    req.body.m_name &&\n    req.body.l_name &&\n    req.body.department &&\n    req.body.college &&\n    req.body.emp_type &&\n    req.body.is_full_time &&\n    req.body.email\n  ) {\n    try {\n      const id = await Ctrl.addEmployee(req.body);\n      // const employee = await Ctrl.getEmployee({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created employee'\n        // data: employee\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/router.js","import db from '../../database';\nimport sha256 from '../../hash';\n\n//adds an employee\nexport const addEmployee = ({\n  emp_id,\n  username,\n  password,\n  type,\n  f_name,\n  m_name,\n  l_name,\n  department,\n  college,\n  emp_type,\n  is_full_time,\n  email\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL insert_employee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const hpassword = sha256(password);\n\n    const values = [\n      emp_id,\n      username,\n      hpassword,\n      type,\n      f_name,\n      m_name,\n      l_name,\n      department,\n      college,\n      emp_type,\n      is_full_time,\n      email\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      // console.log(results);\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// gets an employee\nexport const getEmployee = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id_increment = ?;\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/studyload/add', async (req, res) => {\n  if (\n    req.body.credits &&\n    req.body.emp_id &&\n    req.body.subject_id\n  ) {\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addStudyLoad(req.body);\n      const sample = await Ctrl.getStudyLoad({ studyload_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created study load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/delete', async (req, res) => {\n  if (req.body.studyload_id) {\n    try {\n      const book = await Ctrl.getStudyLoad(req.body);\n      await Ctrl.removeStudyLoad(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed study load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/edit', async (req, res) => {\n  if (\n    req.body.studyload_id &&\n    req.body.degree &&\n    req.body.university &&\n    req.body.credits &&\n    req.body.subject_code &&\n    req.body.section_code &&\n    req.body.isLecture &&\n    req.body.units &&\n    req.body.room &&\n    req.body.start_time &&\n    req.body.end_time\n  ) {\n    try {\n      await Ctrl.editStudyLoad(req.body);\n      const sample = await Ctrl.getStudyLoad({\n        studyload_id: req.body.studyload_id\n      });\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyEmp(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Study load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/studyload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllStudyLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all studyload',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/router.js","import db from '../../database';\n\nexport const addStudyLoad = ({\n  // degree,\n  // university,\n  credits,\n  emp_id,\n  subject_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call insert_studyload(?, ?, ?)\n    `;\n\n    const values = [subject_id, credits, emp_id];\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call delete_studyload(?)\n    `;\n\n    db.query(queryString, studyload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editStudyLoad = ({\n  studyload_id,\n  degree,\n  university,\n  credits,\n  subject_code,\n  section_code,\n  isLecture,\n  units,\n  room,\n  start_time,\n  end_time\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call update_studyload(?,?,?,?,?,?,?,?,?,?,?)\n    `;\n\n    const values = [\n      studyload_id,\n      degree,\n      university,\n      credits,\n      subject_code,\n      section_code,\n      isLecture,\n      units,\n      room,\n      start_time,\n      end_time\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call view_by_studyload_id(?)\n        `;\n\n    db.query(queryString, studyload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getStudyEmp = ( json ) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n        call view_employee_studyload(?)\n        `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\nexport const getAllStudyLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call view_studyload()\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/teachload/add', async (req, res) => {\n   if (\n      req.body.no_of_students && \n      req.body.subject_code &&\n      req.body.section_code &&\n      req.body.room &&\n      req.body.days &&\n      req.body.start_time &&\n      req.body.end_time &&\n      req.body.hours &&\n      req.body.creditw\n      ) {\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addTeachLoad(req.body,req.session.user);\n      const sample = await Ctrl.getTeachLoad({ teachingload_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created teaching load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/delete/', async (req, res) => {\n  if (\n    req.body.teachingload_id\n  ) {\n    try {\n      const book = await Ctrl.getTeachLoad(req.body);\n      await Ctrl.removeTeachLoad(req.body);\n    \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed teach load',\n        data: book\n      });\n      } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/edit/', async (req, res) => {\n  if (\n      req.body.emp_id &&\n      req.body.no_of_students && \n      req.body.subject_code &&\n      req.body.section_code &&\n      req.body.room &&\n      req.body.days &&\n      req.body.start_time &&\n      req.body.end_time &&\n      req.body.hours &&\n      req.body.creditw\n  ) {\n    try {\n      await Ctrl.editTeachLoad(req.body);\n      const sample = await Ctrl.getTeachEmp({\n        emp_id: req.body.emp_id\n      });\n    \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n      } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getTeachEmp(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched teach load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Teach load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/teachload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllTeachLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all teaching load',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/router.js","import db from '../../database';\n\nexport const addTeachLoad = ({ no_of_students, subject_code, section_code, room, days, start_time, end_time, creditw},json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      INSERT INTO TEACHINGLOAD\n          (emp_id, no_of_students, subject_id)\n        VALUES\n          (?, ?, (SELECT subject_id FROM SUBJECT \n                  WHERE subject_code = ? AND\n                        section_code = ? ));\n    `;\n    //FIX QUERY LATER ON ADD SUBJECT IF SUBJECT DOES NOT EXIST\n    // console.log(no_of_students);\n    const values = [emp_id, no_of_students, subject_code, section_code];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        DELETE \n          FROM TEACHINGLOAD\n        WHERE \n          teachingload_id = ?\n      `;\n\n    db.query(queryString, teachingload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editTeachLoad = ({ no_of_students, emp_id, subject_code, section_code, room, days, start_time, end_time, creditw}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      UPDATE TEACHINGLOAD\n        SET\n          no_of_students = ?\n        WHERE\n          emp_id = ? AND\n          subject_id = (SELECT subject_id FROM SUBJECT \n                        WHERE subject_code = ? AND\n                              section_code = ? );\n    `;\n   \n    const values = [no_of_students, emp_id, subject_code, section_code];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            TEACHINGLOAD\n          WHERE\n            teachingload_id = ?;\n        `;\n\n    db.query(queryString, teachingload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getTeachEmp = (json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n        call view_employee_teachingload(?)\n        `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllTeachLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT *\n          FROM TEACHINGLOAD\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets one faculty\nrouter.post('/api/faculty/view', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getFaculty(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets all faculty\nrouter.get('/api/faculty/viewAll', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getAllFaculty();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/router.js","import db from '../../database';\n\n// gets one faculty\nexport const getFaculty = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          call view_employee_by_id(?);\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all faculty\nexport const getAllFaculty = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call view_employee();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/position/add', async (req, res) => {\n  if (\n    req.body.office &&\n    req.body.credit_units &&\n    req.body.emp_id\n  ) {\n    try {  \n      const id = await Ctrl.addPosition(req.body);\n      // const sample = await Ctrl.getPosition({ id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added position',\n        // data: sample\n\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/position/delete', async (req, res) => {\n  try {\n    const consultation = await Ctrl.getPosition(req.body);\n    await Ctrl.removePosition(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed position',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//edit a position\nrouter.put('/api/position/edit', async (req, res) => {\n  try {\n    await Ctrl.editPosition(req.body);\n    const positionEdited = await Ctrl.getPosition({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited position',\n      data: positionEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/position/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getPosition(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched position',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\nrouter.get('/api/position/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllPositions();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all positions',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/router.js","import db from '../../database';\n\n// add position\nexport const addPosition = ({office, credit_units, emp_id}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL insert_position(?, ?, ?);\n    `;\n\n    const values = [office, credit_units, emp_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// get position\nexport const getPosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            POSITIONN\n          WHERE\n            position_id = ?;\n        `;\n\n    db.query(queryString, [id, id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// get all positions\nexport const getAllPositions = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_position();\n        `;\n\n    db.query(queryString, [id, id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes position\nexport const removePosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_position(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a position\nexport const editPosition = ({\n  position_id, office, credit_units, emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_position(?, ?, ?, ?);\n    `;\n\n    const values = [\n      office, credit_units, emp_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n//add a consultation hours\nrouter.post('/api/consulHours/add', async (req, res) => {\n  if (\n    req.body.consultation_start_time &&\n    req.body.consultation_end_time &&\n    req.body.consultation_place &&\n    req.body.emp_id &&\n    req.body.day\n  ) {\n    try {\n      const id = await Ctrl.addConsulHours(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added consultation hours'\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n//delete a consultation hours\nrouter.post('/api/consulHours/delete', async (req, res) => {\n  try {\n    const consultation = await Ctrl.getConsultation({ id: req.body.id });\n    await Ctrl.removeConsulHours({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed consulation hours',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation hours not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//edit a consultation hours\nrouter.put('/api/consulHours/edit', async (req, res) => {\n  try {\n    await Ctrl.editConsulHours(req.body);\n    const positionEdited = await Ctrl.getConsultation({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited consultation hour',\n      data: positionEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//view all consultation hours\nrouter.get('/api/consulHours/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllConsulHours();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all consultations',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nrouter.post('/api/consulHours/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getConsultation(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched consultation',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/router.js","import db from '../../database';\n\nexport const addConsulHours = ({\n  consultation_start_time,\n  consultation_end_time,\n  consultation_place,\n  day,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL \n      insert_consultation(?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      consultation_start_time,\n      consultation_end_time,\n      consultation_place,\n      day,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes consultation hours\nexport const removeConsulHours = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    CALL \n    delete_consultation(?)\n     \n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// get a consultation hour\nexport const getConsultation = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            CONSULTATION\n          WHERE\n            consultation_id = ?;\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n//gets all consultation hours\nexport const getAllConsulHours = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      view_consultation()\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\nexport const editConsulHours = ({\n  consultation_start_time,\n  consultation_end_time,\n  consultation_place,\n  day,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n     CALL \n     update_consultation(?, ?, ?, ?, ?)\n    `;\n\n    const values = [\n      consultation_start_time,\n      consultation_end_time,\n      consultation_place,\n      day,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets a faculty grant by id\nrouter.post('/api/facultygrant/view', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\n// add a faculty grant\nrouter.post('/api/facultygrant/add', async (req, res) => {\n  if (\n    req.body.type &&\n    req.body.is_approved &&\n    req.body.professional_chair &&\n    req.body.grants &&\n    req.body.grant_title &&\n    req.body.start_date &&\n    req.body.end_date &&\n    req.body.emp_id \n  ) {\n    try {\n      const id = await Ctrl.addFacultyGrant(req.body);\n      const facultygrant = await Ctrl.getFacultyGrant({faculty_grant_id: id});\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created faculty grant',\n        data: facultygrant\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\n// removes a faculty grant\nrouter.post('/api/facultygrant/delete', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    await Ctrl.removeFacultyGrant(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a facultygrant\nrouter.post('/api/facultygrant/edit', async (req, res) => {\n  try {\n    await Ctrl.editFacultyGrant(req.body);\n    const facultygrant = await Ctrl.getFacultyGrant({\n      id: req.body.faculty_grant_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/router.js","import db from '../../database';\n\n//adds a faculty grant\n  export const addFacultyGrant = ({type, isapproved, professional_chair, grants, grant_title, start_date, emp_date, emp_id}) => {\n    return new Promise((resolve, reject) => {\n      const queryString = `\n        CALL \n        insert_faculty_grant(?, ?, ?, ?, ?, ?, ?, ?);\n      `;\n  \n      const values = [type, isapproved, professional_chair, grants, grant_title, start_date, emp_date, emp_id];\n  \n      db.query(queryString, values, (err, results) => {\n        if (err) {\n          console.log(err.message);\n          return reject(500);\n        }\n  \n        return resolve(results.insertId);\n      });\n    });\n  };\n  \n// gets all faculty\n  export const getAllFacultyGrant = () => {\n    return new Promise((resolve, reject) => {\n      const queryString = `\n        call view_faculty_grant();\n      `;\n  \n      db.query(queryString, (err, rows) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n  \n        if (!rows.length) {\n          return reject(404);\n        }\n  \n        return resolve(rows);\n      });\n    });\n  };\n  \n// gets a faculty grant by id\nexport const getFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            FACULTYGRANT\n          WHERE\n            faculty_grant_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes a faculty grant\nexport const removeFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      delete_faculty_grant();\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a faculty grant\nexport const editFacultyGrant = ({\n  faculty_grant_id,\n\ttype,\n\tis_approved,\n\tprofessional_chair,\n\tgrants,\n\tgrant_title,\n\tstart_date,\n\tend_date,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL \n      update_faculty_grant(?, ?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [type, isapproved, professional_chair, grants, grant_title, start_date, emp_date, emp_id];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/limitedpractice/add', async (req, res) => {\n  if (\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      const id = await Ctrl.addLimitedPractice(req.body);\n      const sample = await Ctrl.getLimitedPractice({ limited_practice_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created limited practice',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\nrouter.post('/api/limitedpractice/delete', async (req, res) => {\n  if (\n    req.body.limited_practice_id\n  ) {\n    try {\n      const book = await Ctrl.getLimitedPractice(req.body);\n      await Ctrl.removeLimitedPractice(req.body);\n  \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed limited practice',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\nrouter.post('/api/limitedpractice/edit', async (req, res) => {\n  if (\n    req.body.limited_practice_id &&\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      await Ctrl.editLimitedPractice(req.body);\n      const sample = await Ctrl.getLimitedPractice({\n        limited_practice_id: req.body.limited_practice_id\n      });\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited limited practice',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/limitedpractice/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getLimitedPractice(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched limited practice',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Limited practice not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/limitedpractice/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllLimitedPractice();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all limited practice',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/router.js","import db from '../../database';\n\nexport const addLimitedPractice = ({\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL  \n      insert_limited_practice(?, ?, ?)\n    `;\n    \n    const values = [\n      haveApplied,\n      date_submitted,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n\nexport const removeLimitedPractice = ({ limited_practice_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        delete_limited_practice(?);\n      `;\n\n    db.query(queryString, limited_practice_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\nexport const editLimitedPractice = ({\n  limited_practice_id,\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        update_limited_practice(?, ?, ?, ?)\n      `;\n\n    const values = [\n      haveApplied,\n      date_submitted,\n      emp_id,\n      limited_practice_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getLimitedPractice = ({ limited_practice_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL\n          view_limited_practice_by_emp_id(?)\n        `;\n\n    db.query(queryString, limited_practice_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllLimitedPractice = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        view_limited_practice()\n      `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/controller.js"],"sourceRoot":""}